1. print add in 8 bit 

org 100h
mov al, 5      
mov bl, 10      
add bl, al
mov cx, 8
print: mov ah, 2   
       mov dl, '0'
       test bl, 10000000b  
       jz zero
       mov dl, '1'
zero:  int 21h
       shl bl, 1
loop print
mov dl, 'b'
int 21h
mov ah, 0
int 16h8
ret


2.16 bit addition 

org 100h

mov ax, 1
mov bx, 1
add ax, bx

mov cx, 10
mov si, 0
mov di, 0x0100

convert_to_decimal:
    xor dx, dx
    div cx
    add dl, '0'
    mov [di], dl
    inc di
    cmp ax, 0
    jne convert_to_decimal

dec di
print_result:
    mov dl, [di]
    mov ah, 02h
    int 21h
    dec di
    cmp di, 0x0100 - 1
    jge print_result

mov ah, 0
int 16h

mov ah, 4Ch
int 21h


